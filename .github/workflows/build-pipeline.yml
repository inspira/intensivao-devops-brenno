name: Build Artifacts

on:
  push:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Yarn
      run: npm install -g yarn

    - name: Install Newman
      run: npm install -g newman

    - name: Run backend tests
      working-directory: ./backend
      run: |
        docker-compose -f ../docker-compose-ci.yml up --build -d
        sleep 5
        newman run postman/Intensivao-Devops.postman_collection.json
      
    - name: Generate Backend Semantic Version
      id: backend_version
      run: echo "::set-output name=version::1.0.${{ github.run_number }}"

    - name: Docker Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push to ACR
      uses: docker/build-push-action@v2
      with:
        push: true
        cache-from: ${{ secrets.ACR_SERVER }}/${{ secrets.IMAGE_NAME}}:latest
        tags: ${{ secrets.ACR_SERVER }}/${{ secrets.IMAGE_NAME}}:${{ steps.backend_version.outputs.version }},${{ secrets.ACR_SERVER }}/${{ secrets.IMAGE_NAME}}:latest
        file: ./backend/Dockerfile
    
    - name: Save run number to file
      run: echo "${{ github.run_number }}" > run_number.txt

    - name: Archive run number
      uses: actions/upload-artifact@v4
      with:
        name: run_number
        path: run_number.txt

  build-frontend:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.8.1'

      - name: Install frontend dependencies
        run: yarn --cwd frontend install

      - name: Run frontend tests
        working-directory: ./frontend
        run: yarn test --passWithNoTests

      - name: Generate Frontend Semantic Version
        id: frontend_version
        run: echo "::set-output name=version::1.0.${{ github.run_number }}"

      - name: Build frontend
        run: yarn --cwd frontend build:deploy

      - name: Upload artifact to GitHub Packages
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-${{ steps.frontend_version.outputs.version }}
          path: frontend/build
